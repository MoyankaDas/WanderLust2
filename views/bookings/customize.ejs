<% layout("/layouts/boilerplate.ejs") %>

<!-- Styles -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/themes/airbnb.css">
<style>
  body {
    background-color: #f7f9fb;
    font-family: "Segoe UI", sans-serif;
  }
  .dark-mode .booking-container{
    background-color: black;
    color:white;
  }
  .dark-mode .one{
    background-color: black;
    color:white;
  }
  .booking-container {
    max-width: 1100px;
    margin: 40px auto;
    background: #fff;
    border-radius: 16px;
    padding: 40px;
    box-shadow: 0 10px 40px rgba(0,0,0,0.1);
  }
  h2, h5, h6 {
    font-weight: 700;
  }
  .card-title {
    font-weight: 600;
  }
  .package-card {
    border-radius: 12px;
    transition: all 0.2s ease-in-out;
  }
  .package-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 24px rgba(0,0,0,0.1);
  }
  .badge-selected {
    background-color: #ff385c;
    color: white;
    padding: 0.5em 0.9em;
    border-radius: 1rem;
    font-weight: 500;
  }
  .section-block {
    background-color: #f8f9fa;
    border-radius: 12px;
    padding: 24px;
    margin-top: 24px;
    box-shadow: 0 0 12px rgba(0,0,0,0.04);
  }
  .form-label {
    font-weight: 500;
  }
  .form-control {
    border-radius: 10px;
  }
  #calendar {
    border-radius: 12px;
    padding: 10px;
    background-color: #fff;
    box-shadow: inset 0 0 8px rgba(0,0,0,0.05);
  }
  .flatpickr-day.selected,
  .flatpickr-day.startRange,
  .flatpickr-day.endRange {
    background-color: #ff385c !important;
    color: white;
  }
  .flatpickr-day.disabled {
    background-color: #f8d7da !important;
    color: #888;
  }
  .btn-select {
    border-radius: 10px;
    font-weight: 600;
  }
  .btn-select:hover {
    background-color: #ff385c;
    color: white;
    border: none;
  }
  .highlight-box {
    background-color: #fff8e1;
    border-left: 6px solid #ffb300;
    padding: 1em;
    border-radius: 10px;
  }
  
</style>

<!-- Container -->
<div class="booking-container">
  <div class="alert alert-info text-center shadow-sm mb-4">
    üè¶ <strong>Your Virtual Bank Balance: ‚Çπ<%= virtualBank.toLocaleString() %></strong>
  </div>

  <!-- Header -->
  <div class="text-center mb-5">
    <h2 class="mb-1">Customize Your Booking</h2>
    <p class="text-muted fs-6">Choose a package or customize for <strong><%= listing.title %></strong></p>
  </div>

  <form action="/listings/<%= listing._id %>/book" method="POST" id="bookingForm" class="needs-validation" novalidate>

    <!-- CALENDAR & PACKAGES -->
    <div class="row g-4 ">
      <div class="col-md-5">
        <div class="section-block one">
          <h5 class="mb-3">üìÖ Booking Dates</h5>
          <div id="calendar"></div>
          <input type="hidden" name="bookingDates" id="bookingDatesHidden" required>
          <small class="text-muted">Select check-in and check-out dates</small>
          <div class="mt-3">
            <span id="selectedDatesBadge" class="badge-selected">Not selected</span>
          </div>
        </div>
      </div>

      <div class="col-md-7">
        <div class="section-block one">
          <h5 class="mb-3">üèïÔ∏è Available Packages</h5>
          <div class="row">
            <% packages.forEach(pkg => { %>
              <div class="col-md-6 mb-3">
                <div class="card package-card h-100 border-0 shadow-sm p-3"
                  data-bedrooms="<%= pkg.bedrooms %>"
                  data-bathrooms="<%= pkg.bathrooms %>"
                  data-price="<%= pkg.price %>"
                  data-name="<%= pkg.name %>">
                  <h5 class="card-title text-primary"><%= pkg.name %></h5>
                  <p class="small text-muted"><%= pkg.description %></p>
                  <p class="mb-1"><i class="bi bi-house-door"></i> Bedrooms: <%= pkg.bedrooms %></p>
                  <p class="mb-2"><i class="bi bi-droplet"></i> Bathrooms: <%= pkg.bathrooms %></p>
                  <h6 class="fw-bold text-success">‚Çπ<%= pkg.price %> / night</h6>
                  <button type="button" class="btn btn-outline-primary w-100 mt-2 btn-select select-package">Select</button>
                </div>
              </div>
            <% }) %>
          </div>
        </div>
      </div>
    </div>

    <!-- HIDDEN INPUTS -->
    <input type="hidden" name="package" id="selectedPackage">
    <input type="hidden" name="customBedrooms" id="hiddenBedrooms">
    <input type="hidden" name="customBathrooms" id="hiddenBathrooms">
    <input type="hidden" name="price" id="hiddenPrice">

    <!-- GUESTS -->
    <div class="section-block one">
      <h5 class="mb-3">üë• Guests</h5>
      <div class="row g-3">
        <% const guestTypes = ["Adults", "Children", "Orphans", "Pets"]; %>
        <% guestTypes.forEach((type, i) => { %>
          <div class="col-md-3">
            <label class="form-label" style="color: black;"><%= type %></label>
            <input type="number" class="form-control" name="<%= type.toLowerCase() %>" id="<%= type.toLowerCase() %>" min="0" value="<%= type === 'Adults' ? 1 : 0 %>" >
          </div>
        <% }) %>
      </div>
    </div>

    <!-- MANUAL CUSTOMIZATION -->
    <div class="section-block one" id="manualEntry">
      <h5 class="mb-3">üîß Customize Manually</h5>
      <div class="row g-3">
        <div class="col-md-6">
          <label class="form-label">Bedrooms</label>
          <input type="number" class="form-control" name="customBedroomsManual" id="customBedroomsManual" min="1">
        </div>
        <div class="col-md-6">
          <label class="form-label">Bathrooms</label>
          <input type="number" class="form-control" name="customBathroomsManual" id="customBathroomsManual" min="1">
        </div>
      </div>
    </div>

    <!-- GUEST INFO -->
    <div class="section-block one">
      <h5 class="mb-3">üë§ Guest Information</h5>
      <div class="row g-3">
        <div class="col-md-6">
          <label class="form-label">Full Name</label>
          <input type="text" class="form-control" name="fullName" required>
        </div>
        <div class="col-md-6">
          <label class="form-label">Phone</label>
          <input type="tel" class="form-control" name="phone" pattern="[0-9]{10}" required>
        </div>
        <div class="col-md-12">
          <label class="form-label">Email</label>
          <input type="email" class="form-control" name="email" required>
        </div>
      </div>
    </div>

    <!-- Virtual Bank -->
    <div class="mt-4 p-4 border rounded ">
      <h5 class="mb-3">üè¶ Virtual Bank Info</h5>
      <div class="row">
        <div class="col-md-6 mb-3">
          <label class="form-label">Card Number</label>
          <input type="text" class="form-control" name="cardNumber" pattern="\d{16}" required>
          <div class="invalid-feedback">Card number is required.</div>
        </div>
        <div class="col-md-3 mb-3">
          <label class="form-label">Expiry</label>
          <input type="text" class="form-control" name="expiry" placeholder="MM/YY" pattern="^(0[1-9]|1[0-2])\/?([0-9]{2})$" required>
          <div class="invalid-feedback">Enter expiry in MM/YY format.</div>
        </div>
        <div class="col-md-3 mb-3">
          <label class="form-label">CVV</label>
          <input type="password" class="form-control" name="cvv" pattern="\d{3}" required>
          <div class="invalid-feedback">Enter a 3-digit CVV.</div>
        </div>
        <div class="col-md-6 mb-3">
          <label class="form-label">Bank Account Number</label>
          <input type="text" class="form-control" name="accountNumber" pattern="\d{9,18}" required>
          <div class="invalid-feedback">Bank account number is required.</div>
        </div>
        <div class="col-md-6 mb-3">
          <label class="form-label">IFSC Code</label>
          <input type="text" class="form-control" name="ifsc" pattern="^[A-Z]{4}0[A-Z0-9]{6}$" required>
          <div class="invalid-feedback">Enter a valid IFSC code (e.g., SBIN0123456).</div>
        </div>
      </div>
    </div>
  
    <!-- TOTAL AND SUBMIT -->
    <div class="text-center mt-5">
      <h5>Total Price: <span class="text-success fw-bold">‚Çπ<span id="displayPrice">0</span></span></h5>
      <button type="submit" class="btn btn-success btn-lg mt-3 px-5 shadow">Book Now</button>
    </div>
  </form>
</div>

<!-- Scripts -->
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script>
  let selectedPackagePrice = 0;
  let selectedNights = 0;

  flatpickr("#calendar", {
    mode: "range",
    inline: true,
    minDate: "today",
    dateFormat: "Y-m-d",
    disable: <%- JSON.stringify(bookedDates) %>,
    onChange: function(selectedDates, dateStr) {
      document.getElementById("bookingDatesHidden").value = dateStr;
      document.getElementById("selectedDatesBadge").textContent = dateStr || 'Not selected';
      selectedNights = (selectedDates.length === 2) ? Math.ceil((selectedDates[1] - selectedDates[0]) / (1000 * 60 * 60 * 24)) : 0;
      calculateTotalPrice();
    }
  });

  const packageCards = document.querySelectorAll('.package-card');
  const packageInput = document.getElementById('selectedPackage');
  const bedInput = document.getElementById('hiddenBedrooms');
  const bathInput = document.getElementById('hiddenBathrooms');
  const priceInput = document.getElementById('hiddenPrice');
  const manualEntry = document.getElementById('manualEntry');
  const manualBedrooms = document.getElementById('customBedroomsManual');
  const manualBathrooms = document.getElementById('customBathroomsManual');
  const displayPrice = document.getElementById('displayPrice');

  const guestInputs = ['adults', 'children', 'orphans', 'pets'].map(id => document.getElementById(id));

  packageCards.forEach(card => {
    card.querySelector('.select-package').addEventListener('click', () => {
      const name = card.dataset.name;
      const bedrooms = card.dataset.bedrooms;
      const bathrooms = card.dataset.bathrooms;
      const price = parseInt(card.dataset.price);

      selectedPackagePrice = price;

      packageInput.value = name;
      bedInput.value = bedrooms;
      bathInput.value = bathrooms;
      priceInput.value = price;
      manualEntry.classList.add('d-none');
      manualBedrooms.value = '';
      manualBathrooms.value = '';

      packageCards.forEach(c => c.classList.remove('border-primary'));
      card.classList.add('border-primary');

      calculateTotalPrice();
    });
  });

  guestInputs.forEach(input => input.addEventListener('input', calculateTotalPrice));

  [manualBedrooms, manualBathrooms].forEach(input => {
    input.addEventListener('input', () => {
      packageInput.value = '';
      selectedPackagePrice = 0;
      manualEntry.classList.remove('d-none');
      packageCards.forEach(c => c.classList.remove('border-primary'));
      updateManualPrice();
    });
  });

  function updateManualPrice() {
    const bedCount = parseInt(manualBedrooms.value) || 0;
    const bathCount = parseInt(manualBathrooms.value) || 0;
    if (bedCount >= 1 && bathCount >= 1) {
      const manualBasePrice = (bedCount * 100) + (bathCount * 50);
      priceInput.value = manualBasePrice;
      bedInput.value = bedCount;
      bathInput.value = bathCount;
      calculateTotalPrice();
    }
  }

  function calculateTotalPrice() {
    const adult = parseInt(document.getElementById('adults').value) || 0;
    const child = parseInt(document.getElementById('children').value) || 0;
    const orphan = parseInt(document.getElementById('orphans').value) || 0;
    const pet = parseInt(document.getElementById('pets').value) || 0;

    const guestMultiplier = adult + (child * 0.5) + (orphan * 0.3) + (pet * 0.2);
    const basePrice = selectedPackagePrice || (parseInt(priceInput.value) || 0);

    const nights = Math.max(1, selectedNights);
    const total = Math.round((basePrice + guestMultiplier * 300) * nights);

    displayPrice.textContent = total || 0;
    priceInput.value = total || 0;
  }
</script>